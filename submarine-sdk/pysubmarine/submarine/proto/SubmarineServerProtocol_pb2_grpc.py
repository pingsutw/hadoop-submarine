# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import submarine.proto.SubmarineServerProtocol_pb2 as SubmarineServerProtocol__pb2


class SubmarineServerProtocolStub(object):
  """Interface exported by the server.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SubmitJob = channel.unary_unary(
        '/SubmarineServerProtocol/SubmitJob',
        request_serializer=SubmarineServerProtocol__pb2.ParameterProto.SerializeToString,
        response_deserializer=SubmarineServerProtocol__pb2.ApplicationIdProto.FromString,
        )
    self.TestRpc = channel.unary_unary(
        '/SubmarineServerProtocol/TestRpc',
        request_serializer=SubmarineServerProtocol__pb2.ParametersHolderProto.SerializeToString,
        response_deserializer=SubmarineServerProtocol__pb2.ApplicationIdProto.FromString,
        )


class SubmarineServerProtocolServicer(object):
  """Interface exported by the server.
  """

  def SubmitJob(self, request, context):
    """Submit a job to submarine server.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def TestRpc(self, request, context):
    """test rpc
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SubmarineServerProtocolServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SubmitJob': grpc.unary_unary_rpc_method_handler(
          servicer.SubmitJob,
          request_deserializer=SubmarineServerProtocol__pb2.ParameterProto.FromString,
          response_serializer=SubmarineServerProtocol__pb2.ApplicationIdProto.SerializeToString,
      ),
      'TestRpc': grpc.unary_unary_rpc_method_handler(
          servicer.TestRpc,
          request_deserializer=SubmarineServerProtocol__pb2.ParametersHolderProto.FromString,
          response_serializer=SubmarineServerProtocol__pb2.ApplicationIdProto.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'SubmarineServerProtocol', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
